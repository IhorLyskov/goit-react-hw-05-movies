{"version":3,"file":"static/js/780.f9e18a32.chunk.js","mappings":"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","sources":["components/Cast/CastList.styled.jsx","components/Cast/CastList.jsx","components/Cast/Cast.jsx","components/Messages/Messages.styled.js","utils/api.js","utils/scroll.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  max-width: 1200px;\n  margin: 0 auto;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n  text-align: center;\n  margin: ${p => p.theme.space[3]}px;\n  width: 210px;\n`;\n\nexport const CastImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 320px;\n`;\n\nexport const Name = styled.p`\n  margin: ${p => p.theme.space[1]}px;\n`;\n\nexport const Character = styled.p`\n  margin: ${p => p.theme.space[1]}px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ActorsList,\n  CastItem,\n  CastImage,\n  Name,\n  Character,\n} from './CastList.styled';\nimport noImage from '../../images/noImage.png';\n\nexport const CastList = ({ casting }) => (\n  <ActorsList>\n    {casting.map(({ cast_id, profile_path, original_name, character }) => (\n      <CastItem key={cast_id}>\n        <CastImage\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w342${profile_path}`\n              : noImage\n          }\n          alt={original_name}\n        />\n        <Name>{original_name}</Name>\n        <Character>{`Character: ${character}`}</Character>\n      </CastItem>\n    ))}\n  </ActorsList>\n);\n\nCastList.propTypes = {\n  casting: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      original_name: PropTypes.string,\n      character: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../../utils/api';\nimport { CastList } from './CastList';\nimport Loader from '../Loader/Loader';\nimport { WarningMessage, ErrorMessage } from '../Messages/Messages.styled';\nimport scroll from '../../utils/scroll';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoader, setIsLoader] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    scroll();\n  }, [cast]);\n\n  useEffect(() => {\n    setIsLoader(true);\n\n    getCast(id)\n      .then(result => {\n        setCast(result);\n        setIsError(false);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoader(false));\n  }, [id]);\n\n  return (\n    <>\n      {isLoader && <Loader />}\n      {isError && !isLoader && (\n        <ErrorMessage>Net error! Repeat please...</ErrorMessage>\n      )}\n      {!isError && !isLoader && (!cast || cast.length === 0) && (\n        <WarningMessage>No cast information</WarningMessage>\n      )}\n      {!isError && !isLoader && cast && cast.length && (\n        <CastList casting={cast} />\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.p`\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.red};\n`;\n\nexport const WarningMessage = styled.p`\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n","import axios from 'axios';\n\nconst KEY = '59b490478b7d8f1129f5bb9350f6c53c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport async function searchMovies(query) {\n  const { data } = await axios.get(`/search/movie?&query=${query}`);\n  return data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n}\n\nexport async function getCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n}\n\nexport async function getReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n}\n\n// const ChildComponent = () => {\n//   const [todos, setTodos] = useState([]);\n\n//   useEffect(() => {\n//     const controller = new AbortController();\n\n//     async function fetchData() {\n//       try {\n//         const res = await axios.get(\n//           'https://jsonplaceholder.typicode.com/todos',\n//           {\n//             signal: controller.signal,\n//           }\n//         );\n//         setTodos((prevTodos) => [...prevTodos, ...res.data]);\n//       } catch (error) {}\n//     }\n\n//     fetchData();\n\n//     return () => {\n//       controller.abort();\n//     };\n//   }, []);\n","const scroll = () => {\n  window.scrollTo(0, 0);\n  window.scrollBy({\n    top: (window.screen.availHeight * 2) / 3,\n    behavior: 'smooth',\n  });\n};\n\nexport default scroll;\n"],"names":["ActorsList","styled","CastItem","p","theme","space","CastImage","Name","Character","CastList","casting","map","cast_id","profile_path","original_name","character","src","noImage","alt","useState","cast","setCast","isLoader","setIsLoader","isError","setIsError","id","useParams","useEffect","scroll","getCast","then","result","catch","finally","Loader","length","ErrorMessage","fontSizes","m","fontWeights","bold","colors","red","WarningMessage","searchMovies","query","axios","data","results","getMovieDetails","movieId","getReviews","api_key","window","scrollTo","scrollBy","top","screen","availHeight","behavior"],"sourceRoot":""}